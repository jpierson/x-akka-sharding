<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="akka"
             type="Akka.Configuration.Hocon.AkkaConfigurationSection, Akka" />
  </configSections>
  <startup>
    <supportedRuntime version="v4.0"
                      sku=".NETFramework,Version=v4.5.2" />
  </startup>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Collections.Immutable"
                          publicKeyToken="b03f5f7f11d50a3a"
                          culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.1.37.0"
                         newVersion="1.1.37.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <akka>
    <hocon>
      <![CDATA[
akka {
	actor {
		provider = "Akka.Cluster.ClusterActorRefProvider, Akka.Cluster"
             
    serializers {
      wire = "Akka.Serialization.WireSerializer, Akka.Serialization.Wire"
    }
    serialization-bindings {
      "System.Object" = wire
    }
	}
						
	remote {
		log-remote-lifecycle-events = DEBUG
							
		helios.tcp {
			transport-class = "Akka.Remote.Transport.Helios.HeliosTcpTransport, Akka.Remote"
			applied-adapters = []
			transport-protocol = tcp
			#will be populated with a dynamic host-name at runtime if left uncommented
			#public-hostname = "POPULATE STATIC IP HERE"
			hostname = "0.0.0.0"
      port = 0
		}
	}

	cluster {
		#will inject this node as a self-seed node at run-time
		seed-nodes = ["akka.tcp://test@127.0.0.1:4053"] #manually populate other seed nodes here, i.e. "akka.tcp://lighthouse@127.0.0.1:4053", "akka.tcp://lighthouse@127.0.0.1:4044"
		roles = [sharding]
    sharding {
      least-shard-allocation-strategy.rebalance-threshold = 3
      role = sharding
    }
    singleton {
      singleton-name = loneranger
      role = sharding
    }
	}
}
			]]>
    </hocon>
  </akka>
</configuration>